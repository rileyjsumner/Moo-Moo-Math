package Tutorial;

import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class RandomNumber 
{
    static int points = 0;
    public static void addPoints(int _points)
    {
        points += _points;
    }
    
    public static void main (String args[])
    {
        double lesson = 0.0;
        
        Random num = new Random();
        
        Scanner ans = new Scanner (System.in);
        Scanner ans2 = new Scanner (System.in);
        int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z;
        String a1, b1, c1, d1, e1, f1, g1, h1, i1, j1, k1, l1, m1, n1, o1, p1, q1, r1, s1, t1, u1, v1, w1, x1, y1, z1;
        double a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2, q2, r2, s2, t2, u2, v2, w2, x2, y2, z2;
        
        System.out.print("What lesson are you doing? ");
        lesson = ans.nextDouble();
        lesson = lesson * 10;
        int learn = (int) lesson;
        
        switch (learn)
        {
            case 11:
                points = 0;
                while(points < 100)
                {
                    a = num.nextInt(100);
                    
                    System.out.print("What number comes after " + a + "? ");
                    x = ans.nextInt();
                    
                    if (a + 1 == x)
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                    
                    a = num.nextInt(9) + 1;
                    b = num.nextInt(99) + 1;
                    
                    System.out.print("When counting by " + a + "'s, what number comes after " + b + "? ");
                    z = ans.nextInt();
                    
                    if (b + a == z)
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                    
                    a = num.nextInt(100) + 1;
                    b = num.nextInt(10) + 1;
                    
                    System.out.println("What number comes next in the sequence? ");
                    System.out.print(a + ", " + (a + b) + ", " + (a + b * 2) + ", " + (a + b * 3) + ", " + (a + b * 4) + ", ");
                    y = ans.nextInt();
                    
                    if (a + b * 5 == y)
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                    
                    a = num.nextInt(100) + 1;
                    System.out.println("Is this number even? (yes or no) " + a);
                    w1 = ans2.nextLine();
                    w1 = w1.toLowerCase();
                    
                    boolean b3 = a % 2==0;
                    if (b3 == true && w1.equals("yes"))
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else if (b3 == false && w1.equals("no"))
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                }
            break;
            case 12:
                points = 0;
                while (points < 100)
                {
                    c = num.nextInt(10) + 10;
                    d = num.nextInt(10);
                    
                    System.out.print("What is " + c + " + " + d + "? ");
                    v = ans.nextInt();
                    
                    e = c + d;
                    
                    if (v == e)
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                }
            break;
            case 13:
                points = 0;
                while (points < 100)
                {
                    f = num.nextInt(10) + 10;
                    g = num.nextInt(10);
                    
                    System.out.print("What is " + f + " - " + g + "? ");
                    v = ans.nextInt();
                    
                    h = f - g;
                    
                    if (v == h)
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                }
            break;
            case 14:
                points = 0;
                while (points < 60)
                {
                    n = num.nextInt(6) + 3;
                    System.out.print("Give me a shape that has " + n + " sides? ");
                    k1 = ans2.nextLine();
                    
                    boolean g3 = false;
                    if (n == 3)
                    {
                        if (findKeyword(k1, "triangle") >= 0
                            || (findKeyword(k1, "tryangle")) >= 0
                            || (findKeyword(k1, "triangel")) >= 0
                            || (findKeyword(k1, "tryangel")) >= 0)
                        {
                            g3 = true;
                        }
                    }
                    else if (n == 4)
                    {
                        if (findKeyword(k1, "square") >= 0
                            || (findKeyword(k1, "rectangle")) >= 0
                            || (findKeyword(k1, "sqware")) >= 0
                            || (findKeyword(k1, "recktangle")) >= 0
                            || (findKeyword(k1, "rektangle")) >= 0
                            || (findKeyword(k1, "rectangel")) >= 0
                            || (findKeyword(k1, "recktangel")) >= 0
                            || (findKeyword(k1, "rektangel")) >= 0)
                        {
                            g3 = true;
                        }
                    }
                    else if (n == 5)
                    {
                        if (findKeyword(k1, "pentagon") >= 0
                            || (findKeyword(k1, "pentogon")) >= 0
                            || (findKeyword(k1, "pentagan")) >= 0
                            || (findKeyword(k1, "pentegon")) >= 0
                            || (findKeyword(k1, "pentogan")) >= 0
                            || (findKeyword(k1, "pentagone")) >= 0
                            || (findKeyword(k1, "pentegone")) >= 0)
                        {
                            g3 = true;
                        }
                    }
                    else if (n == 6)
                    {
                        if (findKeyword(k1, "hexagon") >= 0
                            || (findKeyword(k1, "hexagone")) >= 0
                            || (findKeyword(k1, "hexegon")) >= 0
                            || (findKeyword(k1, "hexegone")) >= 0
                            || (findKeyword(k1, "hexogon")) >= 0)
                        {
                            g3 = true;
                        }
                    }
                    else if (n == 7)
                    {
                        if (findKeyword(k1, "heptagon") >= 0
                            || (findKeyword(k1, "heptagone")) >= 0
                            || (findKeyword(k1, "heptegon")) >= 0
                            || (findKeyword(k1, "heptegone")) >= 0
                            || (findKeyword(k1, "heptogon")) >= 0
                            || (findKeyword(k1, "heptogone")) >= 0)
                        {
                            g3 = true;
                        }
                    }
                    else if (n == 8)
                    {
                        if (findKeyword(k1, "octagon") >= 0
                            || (findKeyword(k1, "oktagon")) >= 0
                            || (findKeyword(k1, "ocktagon")) >= 0
                            || (findKeyword(k1, "octagon")) >= 0
                            || (findKeyword(k1, "oktogon")) >= 0
                            || (findKeyword(k1, "ocktogon")) >= 0
                            || (findKeyword(k1, "octogon")) >= 0
                            || (findKeyword(k1, "oktagone")) >= 0
                            || (findKeyword(k1, "ocktagone")) >= 0
                            || (findKeyword(k1, "octagone")) >= 0
                            || (findKeyword(k1, "oktogone")) >= 0
                            || (findKeyword(k1, "ocktogone")) >= 0
                            || (findKeyword(k1, "octogone")) >= 0)
                        {
                            g3 = true;
                        }
                    }
                    
                    if (g3 == true)
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                }
            break;
            case 15:
               
            break;
            case 16:
                
            case 21:
                points = 0;
                while (points < 100)
                {
                    s = num.nextInt(899) + 100;
                    r = num.nextInt(89) + 10;
                    
                    System.out.print("What is " + s + " + " + r + "? ");
                    q = ans.nextInt();
                    
                    g = s + r;
                    
                    if (g == q)
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                }
            break;
            case 22:
                points = 0;
                while (points < 100)
                {
                    s = num.nextInt(899) + 100;
                    r = num.nextInt(98) + 1;
                    
                    System.out.print("What is " + s + " - " + r + "? ");
                    q = ans.nextInt();
                    
                    g = s - r;
                    
                    if (g == q)
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                }
            break;
            case 23:
            case 24:
            case 25:
            case 26:
            case 31:
                points = 0;
                while (points < 100)
                {
                    f = num.nextInt(10);
                    g = num.nextInt(10);
                    
                    System.out.print("What is " + f + " * " + g + "? ");
                    v = ans.nextInt();
                    
                    h = f * g;
                    
                    if (v == h)
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                }
            break;
            case 32:
                points = 0;
                while (points < 100)
                {
                    f = num.nextInt(10) + 1;
                    l = num.nextInt(10) + 1;
                    
                    g = f * l;
                    
                    int[] h3 = new int[2];
                    h3[0] = f;
                    h3[1] = l;
                    
                    
                    
                    System.out.print("What is " + f + " / " + g + "? ");
                    v = ans.nextInt();
                    
                    h = f / g;
                    
                    if (v == h)
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                }
            break;
            case 33:
            case 34:
                points = 0;
                while (points < 100)
                {
                    a = num.nextInt(9);
                    b = num.nextInt(9);
                    c = num.nextInt(9);
                    d = num.nextInt(9);
                    e = num.nextInt(9);
                    f = num.nextInt(9);
                    
                    a1 = a + " " + b + " " + c + " " + d  + " " + e + " " + f;
                    System.out.print("What is the highest number you can make from these digits?: \n" + a1 + " ");
                    g1 = ans2.nextLine();
                    
                    int h3[] = {a, b, c, d, e, f};
                    Arrays.sort(h3);
                        h = h3[h3.length-1];
                        i = h3[h3.length-2];
                        j = h3[h3.length-3];
                        k = h3[h3.length-4];
                        l = h3[h3.length-5];
                        m = h3[h3.length-6];
                    b1 =  h + "" +  i + j + k + l + m;
                    
                        if (g1.equals(b1))
                        {
                            System.out.println("Correct!");
                            addPoints(10);
                        }
                        else
                        {System.out.println("Incorrect");}
                    
                    n = num.nextInt(15);
                    o = num.nextInt(15);
                    
                    p = n + o;
                    q = 0;
                    if  (n > 0)
                    {q = n - o;}
                    else if (n < o)
                    {q = o - n;}
                    
                    System.out.print("The sum of 2 numbers is " + p + ". The difference of the 2 numbers is " + q + ". \nWhat is number 1? ");
                    r = ans.nextInt();
                    System.out.print("What is number 2? ");
                    s = ans.nextInt();
                    
                        if ((r == n || r == o) && (s == n || s == o))
                        {
                            System.out.println("Correct!");
                            addPoints(10);
                        }
                        else
                        {System.out.println("Incorrect");}
                        
                    t = num.nextInt(150);
                    u = num.nextInt(10) + 5;
                    v = num.nextInt(98) - u;
                    a = 0;
                    if (v <= 0)
                    {v = v + 10;}
                    
                    w = (int)Math.log10(t) + 1;
                    System.out.print("I am a " + w + "-digit number. ");
                    if(t % 9 == 0)
                    {System.out.print("You say me when you count by 9's. ");a = 9;}
                    else if (t % 8 == 0)
                    {System.out.print("You say me when you count by 8's. ");a = 8;}
                    else if (t % 7 == 0)
                    {System.out.print("You say me when you count by 7's. ");a = 7;}
                    else if (t % 6 == 0)
                    {System.out.print("You say me when you count by 6's. ");a = 6;}
                    else if (t % 5 == 0)
                    {System.out.print("You say me when you count by 5's. ");a = 5;}
                    else if (t % 4 == 0)
                    {System.out.print("You say me when you count by 4's. ");a = 4;}
                    else if (t % 3 == 0)
                    {System.out.print("You say me when you count by 3's. ");a = 3;}
                    else if (t % 2 == 0)
                    {System.out.print("You say me when you count by 2's. ");a = 2;}
                    else
                    {System.out.print("I am a prime number. ");a = 3;}
                    
                    z = t - a;
                    x = t + a;
                    System.out.print("I am greater than " + z + ", but less than " + x + ". ");
                    y = ans.nextInt();
                        if (y == t)
                        {
                            System.out.println("Correct!");
                            addPoints(10);
                        }
                        else
                        {System.out.println("Incorrect");}
                }
            break;
            case 35:
            case 36:
            case 41:
                points = 0;
                while (points < 100)
                {
                    c = num.nextInt(10) + 1;
                    t = num.nextInt(10) + 1;
                    
                    String[] alpha = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"};
                    
                    h = num.nextInt(25);
                    
                    l = t + c;
                    System.out.print("What is " + c + " + " + alpha[h] + " if " + alpha[h] + " = " + t + "? ");
                    e = ans.nextInt();
                    
                    if (e == l)
                    {
                        addPoints(10);
                        System.out.println("Correct!");
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                }
            break;
            case 42:
            case 43:
            case 44:
                points = 0;
                while (points < 100)
                {
                    r = num.nextInt(39) + 10;
                    s = num.nextInt(39) + 10;
                    t = num.nextInt(39) + 10;
                    y = num.nextInt(39) + 10;
                    z = num.nextInt(39) + 10;
                    n = num.nextInt(10) + 1;
                    boolean[] r3 = {true, false, false, true, false, false, true, false, false, false};
                    b = num.nextInt(9);
                    
                    System.out.println("   in    *   out   ");
                    System.out.println("*******************");
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + r + "   *    " + (r+n) + "    ");}
                    else
                    {System.out.println("    " + r + "   *    " + (r+n) + "    ");}
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + s + "   *    " + (s+n) + "    ");}
                    else
                    {System.out.println("    *    *    " + (s+n) + "    ");}
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + t + "   *    " + (t+n) + "    ");}
                    else
                    {System.out.println("    " + y + "   *    *    ");}
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + z + "   *    " + (z+n) + "    ");}
                    else
                    {System.out.println("    " + z + "   *    *    ");}
                    
                    System.out.print("What's my rule? +");
                    a = ans.nextInt();
                    
                        if (a == n)
                        {
                            addPoints(10);
                            System.out.println("Correct!");
                        }
                        else
                        {System.out.println("Incorrect");}
                    
                    System.out.println("   in    *   out   ");
                    System.out.println("*******************");
                    n = num.nextInt(10) + 1;
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + r + "   *    " + (r-n) + "    ");}
                    else
                    {System.out.println("    " + r + "   *    " + (r-n) + "    ");}
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + s + "   *    " + (s-n) + "    ");}
                    else
                    {System.out.println("    *    *    " + (s-n) + "    ");}
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + t + "   *    " + (t-n) + "    ");}
                    else
                    {System.out.println("    " + y + "   *    *    ");}
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + z + "   *    " + (z-n) + "    ");}
                    else
                    {System.out.println("    " + z + "   *    *    ");}
                    
                    System.out.print("What's my rule? -");
                    a = ans.nextInt();
                    
                        if (a == n)
                        {
                            addPoints(10);
                            System.out.println("Correct!");
                        }
                        else
                        {System.out.println("Incorrect");}
                    
                    System.out.println("   in    *   out   ");
                    System.out.println("*******************");
                    
                    r = num.nextInt(8) + 1;
                    s = num.nextInt(8) + 1;
                    t = num.nextInt(8) + 1;
                    y = num.nextInt(9) + 1;
                    z = num.nextInt(8) + 1;
                    n = num.nextInt(10) + 1;
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + r + "   *    " + (r*n) + "    ");}
                    else
                    {System.out.println("    " + r + "   *    " + (r*n) + "    ");}
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + s + "   *    " + (s*n) + "    ");}
                    else
                    {System.out.println("    *   *    " + (s*n) + "    ");}
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + t + "   *    " + (t*n) + "    ");}
                    else
                    {System.out.println("    " + y + "   *    *    ");}
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + z + "   *    " + (z*n) + "    ");}
                    else
                    {System.out.println("    " + z + "   *    *    ");}
                    
                    System.out.print("What's my rule? *");
                    a = ans.nextInt();
                    
                        if (a == n)
                        {
                            addPoints(10);
                            System.out.println("Correct!");
                        }
                        else
                        {System.out.println("Incorrect");}
                        
                        System.out.println("   in    *   out   ");
                    System.out.println("*******************");
                    
                    n = num.nextInt(10) + 1;
                    r = num.nextInt(4) + 5;
                    r = r * n;
                    s = num.nextInt(4) + 5;
                    s = s * n;
                    t = num.nextInt(4) + 5;
                    t = t * n;
                    y = num.nextInt(4) + 5;
                    y = y * n;
                    z = num.nextInt(4) + 5;
                    z = z * n;
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + r + "   *    " + (r/n) + "    ");}
                    else
                    {System.out.println("    " + r + "   *    " + (r/n) + "    ");}
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + s + "   *    " + (s/n) + "    ");}
                    else
                    {System.out.println("    *    *    " + (s/n) + "    ");}
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + t + "   *    " + (t/n) + "    ");}
                    else
                    {System.out.println("    " + y + "   *    *    ");}
                    b = num.nextInt(9);
                    if (r3[b] == true)
                    {System.out.println("    " + z + "   *    " + (z/n) + "    ");}
                    else
                    {System.out.println("    " + z + "   *    *    ");}
                    
                    System.out.print("What's my rule? /");
                    a = ans.nextInt();
                    
                        if (a == n)
                        {
                            addPoints(10);
                            System.out.println("Correct!");
                        }
                        else
                        {System.out.println("Incorrect");}
                }
            break;
            case 45:
            case 46:
            case 47:
            case 51:
            case 52:
            case 53:
            case 54:
                points = 0;
                while (points < 100)
                {
                    p = num.nextInt(10) + 1;
                    t = num.nextInt(10) + 1;
                    i = num.nextInt(10) + 1;
                    j = num.nextInt(10) + 1;
                    
                    w2 = p + ((double)j/10);
                    v2 = t + ((double)i/10);
                    
                    System.out.print("What is " + w2 + " + " + v2 + "? ");
                    c2 = ans.nextDouble();
                    
                    u2 = w2 + v2;
                    if (u2 == c2)
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                }
            break;
            case 55:
                points = 0;
                while (points < 100)
                {
                    p = num.nextInt(10) + 1;
                    t = num.nextInt(10) + 1;
                    i = num.nextInt(10) + 1;
                    j = num.nextInt(10) + 1;
                    
                    w2 = p + ((double)j/10);
                    v2 = t + ((double)i/10);
                    
                    System.out.print("What is " + w2 + " - " + v2 + "? ");
                    c2 = ans.nextDouble();
                    
                    u2 = (w2 - v2);
                    if (u2 == c2)
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                }
            break;
            case 56:
                points = 0;
                while (points < 100)
                {
                    p = num.nextInt(10) + 1;
                    t = num.nextInt(10) + 1;
                    i = num.nextInt(10) + 1;
                    j = num.nextInt(10) + 1;
                    
                    w2 = p + ((double)j/10);
                    v2 = t + ((double)i/10);
                    
                    System.out.print("What is " + w2 + " * " + v2 + "? ");
                    c2 = ans.nextDouble();
                    
                    u2 = w2 * v2;
                    if (u2 == c2)
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                }
            break;
            case 57:
                points = 0;
                while (points < 100)
                {
                    p = num.nextInt(10) + 1;
                    t = num.nextInt(10) + 1;
                    i = num.nextInt(10) + 1;
                    j = num.nextInt(10) + 1;
                    
                    w2 = p + ((double)j/10);
                    v2 = t + ((double)i/10);
                    
                    double [] divisors = new double [2];
                    divisors[0] = w2;
                    divisors[1] = v2;
                    
                    t2 = w2 * v2;
                    
                    m = num.nextInt(1);
                    
                    System.out.print("What is " + t + " / " + divisors[m] + "? ");
                    c2 = ans.nextDouble();
                    
                    u2 = t / divisors[m];
                    if (u2 == c2)
                    {
                        System.out.println("Correct!");
                        addPoints(10);
                    }
                    else
                    {
                        System.out.println("Incorrect");
                    }
                }
            break;
        }
    }
    private static int findKeyword(String statement, String goal, int startPos) 
    {
        String phrase = statement.trim();
        int psn = phrase.toLowerCase().indexOf(goal.toLowerCase(), startPos);

        while (psn >= 0) 
        {
            String before = " ", after = " "; 
            if (psn > 0)
            {
                before = phrase.substring (psn - 1, psn).toLowerCase();
            }
            if (psn + goal.length() < phrase.length())
            {
                after = phrase.substring(psn + goal.length(), psn + goal.length() + 1).toLowerCase();
            }

            if (((before.compareTo ("a") < 0 ) || (before.compareTo("z") > 0))
                    && ((after.compareTo ("a") < 0 ) || (after.compareTo("z") > 0)))
            {
                return psn;
            }
            psn = phrase.indexOf(goal.toLowerCase(), psn + 1);

        }
        return -1;
    }
    private static int findKeyword(String statement, String goal)
    {return findKeyword (statement, goal, 0);}

}